<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>verilog on Justin Nguyen / Software Engineer</title><link>https://www.justinnuwin.com/tags/verilog/</link><description>Recent content in verilog on Justin Nguyen / Software Engineer</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Â© 2020 Justin Nguyen</copyright><lastBuildDate>Sun, 14 Feb 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://www.justinnuwin.com/tags/verilog/index.xml" rel="self" type="application/rss+xml"/><item><title>SpeQtral</title><link>https://www.justinnuwin.com/experience/speqtral-2021/</link><pubDate>Sun, 14 Feb 2021 00:00:00 +0000</pubDate><guid>https://www.justinnuwin.com/experience/speqtral-2021/</guid><description>I designed and developed a configureable 4-channel DDR LVDS Serialized AXI FPGA interface in SystemVerilog (up to 250MHz) for time-digital-converter application on an Xilinx Zynq SoC. The TDC was interfaced to the FPGA SoM that I designed. In addition to the FPGA interface, I also developed the kernel and user-space drivers for accessing/debugging the interface and TDC from the SoC Linux environment. To leverage full speed data transfers of the FPGA interface I designed, a AXI to USB 3.</description><content>&lt;p>I designed and developed a configureable 4-channel DDR LVDS Serialized AXI FPGA interface in SystemVerilog (up to 250MHz) for time-digital-converter application on an Xilinx Zynq SoC.
The TDC was interfaced to the FPGA SoM that I designed.
In addition to the FPGA interface, I also developed the kernel and user-space drivers for accessing/debugging the interface and TDC from the SoC Linux environment.
To leverage full speed data transfers of the FPGA interface I designed, a AXI to USB 3.0 SuperSpeed interface was designed to stream the serialized TDC datastream to a downstream computer.&lt;/p></content></item></channel></rss>